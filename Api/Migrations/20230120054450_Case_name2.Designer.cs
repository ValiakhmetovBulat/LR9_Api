// <auto-generated />
using System;
using Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20230120054450_Case_name2")]
    partial class Casename2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("parentID")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<string>("short_name")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("ID")
                        .HasName("pk_categories");

                    b.HasIndex("parentID")
                        .HasDatabaseName("ix_categories_parent_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Api.Models.Contractor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("BIK")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bik");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<string>("KPP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("OGRN")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("korr_shet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("korr_shet");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("rashet_shet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rashet_shet");

                    b.Property<string>("rukovod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rukovod");

                    b.Property<string>("short_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<string>("ur_adres")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ur_adres");

                    b.HasKey("ID")
                        .HasName("pk_contractors");

                    b.ToTable("contractors", (string)null);
                });

            modelBuilder.Entity("Api.Models.Karta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_karta");

                    b.ToTable("karta", (string)null);
                });

            modelBuilder.Entity("Api.Models.Manufacture", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_manufactures");

                    b.ToTable("manufactures", (string)null);
                });

            modelBuilder.Entity("Api.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("categoryID")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<string>("dekor")
                        .HasColumnType("text")
                        .HasColumnName("dekor");

                    b.Property<double>("dlina")
                        .HasColumnType("double precision")
                        .HasColumnName("dlina");

                    b.Property<int>("kol_list_v_pachke")
                        .HasColumnType("integer")
                        .HasColumnName("kol_list_v_pachke");

                    b.Property<int?>("manufID")
                        .HasColumnType("integer")
                        .HasColumnName("manuf_id");

                    b.Property<string>("material")
                        .HasColumnType("text")
                        .HasColumnName("material");

                    b.Property<string>("naim")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("naim");

                    b.Property<string>("nazn")
                        .HasColumnType("text")
                        .HasColumnName("nazn");

                    b.Property<double>("shir")
                        .HasColumnType("double precision")
                        .HasColumnName("shir");

                    b.Property<string>("sort")
                        .HasColumnType("text")
                        .HasColumnName("sort");

                    b.Property<double>("tol")
                        .HasColumnType("double precision")
                        .HasColumnName("tol");

                    b.Property<double>("ves_lista")
                        .HasColumnType("double precision")
                        .HasColumnName("ves_lista");

                    b.Property<string>("zvet")
                        .HasColumnType("text")
                        .HasColumnName("zvet");

                    b.HasKey("ID")
                        .HasName("pk_products");

                    b.HasIndex("categoryID")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Api.Models.Shet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("contractorID")
                        .HasColumnType("integer")
                        .HasColumnName("contractor_id");

                    b.Property<DateTime?>("date_oplaty")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_oplaty");

                    b.Property<DateTime>("date_sheta")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_sheta");

                    b.Property<bool>("is_korr")
                        .HasColumnType("boolean")
                        .HasColumnName("is_korr");

                    b.Property<int>("nom_shet")
                        .HasColumnType("integer")
                        .HasColumnName("nom_shet");

                    b.Property<bool>("oplachen")
                        .HasColumnType("boolean")
                        .HasColumnName("oplachen");

                    b.Property<string>("prim")
                        .HasColumnType("text")
                        .HasColumnName("prim");

                    b.Property<int>("userID")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("ID")
                        .HasName("pk_shets");

                    b.HasIndex("contractorID")
                        .HasDatabaseName("ix_shets_contractor_id");

                    b.HasIndex("userID")
                        .HasDatabaseName("ix_shets_user_id");

                    b.ToTable("shets", (string)null);
                });

            modelBuilder.Entity("Api.Models.Shet_prods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double>("count")
                        .HasColumnType("double precision")
                        .HasColumnName("count");

                    b.Property<double>("price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("productID")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("shetID")
                        .HasColumnType("integer")
                        .HasColumnName("shet_id");

                    b.HasKey("ID")
                        .HasName("pk_shet_prods");

                    b.HasIndex("productID")
                        .HasDatabaseName("ix_shet_prods_product_id");

                    b.HasIndex("shetID")
                        .HasDatabaseName("ix_shet_prods_shet_id");

                    b.ToTable("shet_prods", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad.Price", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double>("price_beznal")
                        .HasColumnType("double precision")
                        .HasColumnName("price_beznal");

                    b.Property<double>("price_nal")
                        .HasColumnType("double precision")
                        .HasColumnName("price_nal");

                    b.Property<int>("productID")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("ID")
                        .HasName("pk_prices");

                    b.HasIndex("productID")
                        .HasDatabaseName("ix_prices_product_id");

                    b.ToTable("prices", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad.Product_stock", b =>
                {
                    b.Property<int>("coming_stock")
                        .HasColumnType("integer")
                        .HasColumnName("coming_stock");

                    b.Property<int>("kod_tovara")
                        .HasColumnType("integer")
                        .HasColumnName("kod_tovara");

                    b.Property<int>("rezerved_stock")
                        .HasColumnType("integer")
                        .HasColumnName("rezerved_stock");

                    b.Property<int>("total_stock")
                        .HasColumnType("integer")
                        .HasColumnName("total_stock");

                    b.HasIndex("kod_tovara")
                        .HasDatabaseName("ix_product_stock_kod_tovara");

                    b.ToTable((string)null);

                    b.ToView("Product_stock_view", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad.Sklad_prihod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("contractorID")
                        .HasColumnType("integer")
                        .HasColumnName("contractor_id");

                    b.Property<DateTime>("date_prih")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_prih");

                    b.Property<double?>("deliv_cost")
                        .HasColumnType("double precision")
                        .HasColumnName("deliv_cost");

                    b.Property<double?>("dop_rash")
                        .HasColumnType("double precision")
                        .HasColumnName("dop_rash");

                    b.Property<bool>("is_in_sklad")
                        .HasColumnType("boolean")
                        .HasColumnName("is_in_sklad");

                    b.Property<bool?>("is_korr")
                        .HasColumnType("boolean")
                        .HasColumnName("is_korr");

                    b.Property<int>("nom_prih")
                        .HasColumnType("integer")
                        .HasColumnName("nom_prih");

                    b.Property<string>("prim")
                        .HasColumnType("text")
                        .HasColumnName("prim");

                    b.Property<bool?>("transport_ot_post")
                        .HasColumnType("boolean")
                        .HasColumnName("transport_ot_post");

                    b.Property<int>("userID")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("ID")
                        .HasName("pk_sklad_prihods");

                    b.HasIndex("contractorID")
                        .HasDatabaseName("ix_sklad_prihods_contractor_id");

                    b.HasIndex("userID")
                        .HasDatabaseName("ix_sklad_prihods_user_id");

                    b.ToTable("sklad_prihods", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad.Sklad_prihod_prods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<double>("price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<double>("price_with_deliv")
                        .HasColumnType("double precision")
                        .HasColumnName("price_with_deliv");

                    b.Property<int>("prihodID")
                        .HasColumnType("integer")
                        .HasColumnName("prihod_id");

                    b.Property<int>("productID")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("ID")
                        .HasName("pk_sklad_prihod_prods");

                    b.HasIndex("prihodID")
                        .HasDatabaseName("ix_sklad_prihod_prods_prihod_id");

                    b.HasIndex("productID")
                        .HasDatabaseName("ix_sklad_prihod_prods_product_id");

                    b.ToTable("sklad_prihod_prods", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad_dostavki", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<DateTime?>("data_opl_klientom")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_opl_klientom");

                    b.Property<DateTime?>("data_rash")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_rash");

                    b.Property<int?>("karta_id")
                        .HasColumnType("integer")
                        .HasColumnName("karta_id");

                    b.Property<bool>("opl_klientom")
                        .HasColumnType("boolean")
                        .HasColumnName("opl_klientom");

                    b.Property<bool?>("opl_na_vigruz")
                        .HasColumnType("boolean")
                        .HasColumnName("opl_na_vigruz");

                    b.Property<bool>("opl_voditelu")
                        .HasColumnType("boolean")
                        .HasColumnName("opl_voditelu");

                    b.Property<string>("otpustil")
                        .HasColumnType("text")
                        .HasColumnName("otpustil");

                    b.Property<int?>("perevoz_id")
                        .HasColumnType("integer")
                        .HasColumnName("perevoz_id");

                    b.Property<decimal?>("platel")
                        .HasColumnType("numeric")
                        .HasColumnName("platel");

                    b.Property<string>("prim")
                        .HasColumnType("text")
                        .HasColumnName("prim");

                    b.Property<bool>("provereno")
                        .HasColumnType("boolean")
                        .HasColumnName("provereno");

                    b.Property<int?>("shet")
                        .HasColumnType("integer")
                        .HasColumnName("shet");

                    b.Property<int>("sklad_rashod_id")
                        .HasColumnType("integer")
                        .HasColumnName("sklad_rashod_id");

                    b.Property<double>("summa")
                        .HasColumnType("double precision")
                        .HasColumnName("summa");

                    b.Property<int>("tip_opl_id")
                        .HasColumnType("integer")
                        .HasColumnName("tip_opl_id");

                    b.Property<int?>("voditel_id")
                        .HasColumnType("integer")
                        .HasColumnName("voditel_id");

                    b.HasKey("id")
                        .HasName("pk_sklad_dostavki");

                    b.HasIndex("karta_id")
                        .HasDatabaseName("ix_sklad_dostavki_karta_id");

                    b.HasIndex("shet")
                        .HasDatabaseName("ix_sklad_dostavki_shet");

                    b.HasIndex("sklad_rashod_id")
                        .HasDatabaseName("ix_sklad_dostavki_sklad_rashod_id");

                    b.HasIndex("tip_opl_id")
                        .HasDatabaseName("ix_sklad_dostavki_tip_opl_id");

                    b.ToTable("sklad_dostavki", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad_rashod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("date_oplaty")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_oplaty");

                    b.Property<DateTime?>("date_otgruzki")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_otgruzki");

                    b.Property<DateTime>("date_rash")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_rash");

                    b.Property<DateTime>("date_sozdania")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_sozdania");

                    b.Property<string>("name_customer")
                        .HasColumnType("text")
                        .HasColumnName("name_customer");

                    b.Property<int>("nom_rash")
                        .HasColumnType("integer")
                        .HasColumnName("nom_rash");

                    b.Property<bool>("oplacheno")
                        .HasColumnType("boolean")
                        .HasColumnName("oplacheno");

                    b.Property<bool>("otgruzheno")
                        .HasColumnType("boolean")
                        .HasColumnName("otgruzheno");

                    b.Property<string>("phone_customer")
                        .HasColumnType("text")
                        .HasColumnName("phone_customer");

                    b.Property<string>("prim")
                        .HasColumnType("text")
                        .HasColumnName("prim");

                    b.Property<int?>("shetID")
                        .HasColumnType("integer")
                        .HasColumnName("shet_id");

                    b.Property<int>("type_oplatyID")
                        .HasColumnType("integer")
                        .HasColumnName("type_oplaty_id");

                    b.Property<int>("userID")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("ID")
                        .HasName("pk_sklad_rashods");

                    b.HasIndex("shetID")
                        .HasDatabaseName("ix_sklad_rashods_shet_id");

                    b.HasIndex("type_oplatyID")
                        .HasDatabaseName("ix_sklad_rashods_type_oplaty_id");

                    b.HasIndex("userID")
                        .HasDatabaseName("ix_sklad_rashods_user_id");

                    b.ToTable("sklad_rashods", (string)null);
                });

            modelBuilder.Entity("Api.Models.Sklad_rashod_prods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<double>("price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("productID")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("rashodID")
                        .HasColumnType("integer")
                        .HasColumnName("rashod_id");

                    b.HasKey("ID")
                        .HasName("pk_sklad_rashod_prods");

                    b.HasIndex("productID")
                        .HasDatabaseName("ix_sklad_rashod_prods_product_id");

                    b.HasIndex("rashodID")
                        .HasDatabaseName("ix_sklad_rashod_prods_rashod_id");

                    b.ToTable("sklad_rashod_prods", (string)null);
                });

            modelBuilder.Entity("Api.Models.Type_oplaty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("naim")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("naim");

                    b.HasKey("ID")
                        .HasName("pk_types_oplaty");

                    b.ToTable("types_oplaty", (string)null);
                });

            modelBuilder.Entity("Api.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("papaname")
                        .HasColumnType("text")
                        .HasColumnName("papaname");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("ID")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Api.Models.Category", b =>
                {
                    b.HasOne("Api.Models.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("parentID")
                        .HasConstraintName("fk_categories_categories_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Api.Models.Product", b =>
                {
                    b.HasOne("Api.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Api.Models.Shet", b =>
                {
                    b.HasOne("Api.Models.Contractor", "Contractor")
                        .WithMany()
                        .HasForeignKey("contractorID")
                        .HasConstraintName("fk_shets_contractors_contractor_id");

                    b.HasOne("Api.Models.User", "Polz")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shets_users_user_id");

                    b.Navigation("Contractor");

                    b.Navigation("Polz");
                });

            modelBuilder.Entity("Api.Models.Shet_prods", b =>
                {
                    b.HasOne("Api.Models.Product", "Tovar")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shet_prods_products_product_id");

                    b.HasOne("Api.Models.Shet", "Sheta")
                        .WithMany("Sheta_tov")
                        .HasForeignKey("shetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shet_prods_shets_shet_id");

                    b.Navigation("Sheta");

                    b.Navigation("Tovar");
                });

            modelBuilder.Entity("Api.Models.Sklad.Price", b =>
                {
                    b.HasOne("Api.Models.Product", "Tovar")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prices_products_product_id");

                    b.Navigation("Tovar");
                });

            modelBuilder.Entity("Api.Models.Sklad.Product_stock", b =>
                {
                    b.HasOne("Api.Models.Product", "Tovar")
                        .WithMany()
                        .HasForeignKey("kod_tovara")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_stock_products_kod_tovara");

                    b.Navigation("Tovar");
                });

            modelBuilder.Entity("Api.Models.Sklad.Sklad_prihod", b =>
                {
                    b.HasOne("Api.Models.Contractor", "Contractor")
                        .WithMany()
                        .HasForeignKey("contractorID")
                        .HasConstraintName("fk_sklad_prihods_contractors_contractor_id");

                    b.HasOne("Api.Models.User", "Polz")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_prihods_users_user_id");

                    b.Navigation("Contractor");

                    b.Navigation("Polz");
                });

            modelBuilder.Entity("Api.Models.Sklad.Sklad_prihod_prods", b =>
                {
                    b.HasOne("Api.Models.Sklad.Sklad_prihod", "Sklad_prihod")
                        .WithMany("Sklad_prihod_tov")
                        .HasForeignKey("prihodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_prihod_prods_sklad_prihods_prihod_id");

                    b.HasOne("Api.Models.Product", "Tovar")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_prihod_prods_products_product_id");

                    b.Navigation("Sklad_prihod");

                    b.Navigation("Tovar");
                });

            modelBuilder.Entity("Api.Models.Sklad_dostavki", b =>
                {
                    b.HasOne("Api.Models.Karta", "Karta")
                        .WithMany()
                        .HasForeignKey("karta_id")
                        .HasConstraintName("fk_sklad_dostavki_karta_karta_id");

                    b.HasOne("Api.Models.Shet", "Sheta")
                        .WithMany()
                        .HasForeignKey("shet")
                        .HasConstraintName("fk_sklad_dostavki_shets_shet");

                    b.HasOne("Api.Models.Sklad_rashod", "Sklad_rashod")
                        .WithMany("Sklad_dostavki")
                        .HasForeignKey("sklad_rashod_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_dostavki_sklad_rashods_sklad_rashod_id");

                    b.HasOne("Api.Models.Type_oplaty", "Spr_oplat_sklad")
                        .WithMany()
                        .HasForeignKey("tip_opl_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_dostavki_types_oplaty_tip_opl_id");

                    b.Navigation("Karta");

                    b.Navigation("Sheta");

                    b.Navigation("Sklad_rashod");

                    b.Navigation("Spr_oplat_sklad");
                });

            modelBuilder.Entity("Api.Models.Sklad_rashod", b =>
                {
                    b.HasOne("Api.Models.Shet", "Shet")
                        .WithMany()
                        .HasForeignKey("shetID")
                        .HasConstraintName("fk_sklad_rashods_shets_shet_id");

                    b.HasOne("Api.Models.Type_oplaty", "Spr_oplat_sklad")
                        .WithMany()
                        .HasForeignKey("type_oplatyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_rashods_types_oplaty_type_oplaty_id");

                    b.HasOne("Api.Models.User", "Polz")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_rashods_users_user_id");

                    b.Navigation("Polz");

                    b.Navigation("Shet");

                    b.Navigation("Spr_oplat_sklad");
                });

            modelBuilder.Entity("Api.Models.Sklad_rashod_prods", b =>
                {
                    b.HasOne("Api.Models.Product", "Tovar")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_rashod_prods_products_product_id");

                    b.HasOne("Api.Models.Sklad_rashod", "Sklad_rashod")
                        .WithMany("Sklad_rashod_tov")
                        .HasForeignKey("rashodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sklad_rashod_prods_sklad_rashods_rashod_id");

                    b.Navigation("Sklad_rashod");

                    b.Navigation("Tovar");
                });

            modelBuilder.Entity("Api.Models.Shet", b =>
                {
                    b.Navigation("Sheta_tov");
                });

            modelBuilder.Entity("Api.Models.Sklad.Sklad_prihod", b =>
                {
                    b.Navigation("Sklad_prihod_tov");
                });

            modelBuilder.Entity("Api.Models.Sklad_rashod", b =>
                {
                    b.Navigation("Sklad_dostavki");

                    b.Navigation("Sklad_rashod_tov");
                });
#pragma warning restore 612, 618
        }
    }
}
